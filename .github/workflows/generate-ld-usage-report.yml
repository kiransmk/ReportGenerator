name: Generate Launch Darkly feature flag usage HTML report and Deploy to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      project_key:
        description: 'LaunchDarkly Project Key'
        required: true
        default: 'default'

# permissions:
#   pages: write
#   id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
    
      - name: Install Python dependencies
        run: |
          pip install -r ld_code_refs/requirements.txt
  
      - name: Extract Repository Name and Branch Name
        run: |
          echo "Repository: $GITHUB_REPOSITORY"
          repo_name=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          branch_name=${GITHUB_REF##*/}
          echo "Repository Name: $repo_name"
          echo "Branch Name: $repo_name"
          echo "LaunchDarkly project key: ${{ github.event.inputs.project_key }}"
          echo "REPO_NAME=$repo_name" >> $GITHUB_ENV
          echo "BRANCH_NAME=$branch_name" >> $GITHUB_ENV

      # - name: Run ld-find-code-refs in Docker
      #   run: |
      #     docker run --rm \
      #     -v "$(pwd)":/workspace \
      #     -w /workspace \
      #     launchdarkly/ld-find-code-refs \
      #     --accessToken=${{ secrets.LD_ACCESS_TOKEN }} \
      #     --projKey=${{ github.event.inputs.project_key }} \
      #     --repoName=${{ env.REPO_NAME }} \
      #     --dir=./ \
      #     --outDir=ld_code_refs
      #   env:
      #     GIT_SSH_COMMAND: "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no"

      - name: Generate HTML from CSV
        run: |
          python ld_code_refs/generate_html.py ld_code_refs/coderefs__${{ env.REPO_NAME }}_${{ env.BRANCH_NAME }}.csv ld_code_refs/index.html ${{ env.REPO_NAME }} ${{ env.BRANCH_NAME }}

      - name: List Files in Deployment Directory
        run: ls -lahR ld_code_refs/

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-artifact@v4
        with:
          name: deployment-files
          path: ld_code_refs/
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: build-and-deploy

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: deployment-files